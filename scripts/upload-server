#!/usr/bin/env python3

import os
import sys
import socket
import subprocess
from http.server import BaseHTTPRequestHandler, HTTPServer
import re

BASE_DIR = "."  # default to current dir

# Function to get the IP address of tun0 interface
def get_tun0_ip():
    try:
        ip = subprocess.check_output("ip addr show tun0", shell=True).decode()
        match = re.search(r"inet\s(\d+\.\d+\.\d+\.\d+)", ip)
        if match:
            return match.group(1)
        else:
            return None
    except Exception as e:
        print("tun0 not found, falling back to default interface.")

    try:
        # Get primary external IP (non-loopback, non-docker, etc.)
        s = socket.socket(socket.AF_INET, socket.SOCK_DGRAM)
        s.connect(("8.8.8.8", 80))  # Doesn't send data
        fallback_ip = s.getsockname()[0]
        s.close()
        return fallback_ip
    except Exception as e:
        print(f"Error retrieving fallback IP address: {e}")
        return None

# Custom handler for HTTP server
class Handler(BaseHTTPRequestHandler):
    def do_PUT(self):
        length = int(self.headers['Content-Length'])
        path = os.path.join(BASE_DIR, self.path.lstrip("/"))
        with open(path, "wb") as f:
            f.write(self.rfile.read(length))
        self.send_response(200)
        self.end_headers()

    def do_POST(self):
        self.do_PUT()  # Same handler for simplicity

    def do_GET(self):
        path = os.path.join(BASE_DIR, self.path.lstrip("/"))
        if os.path.isfile(path):
            self.send_response(200)
            self.send_header('Content-type', 'application/octet-stream')
            self.end_headers()
            with open(path, 'rb') as f:
                self.wfile.write(f.read())
        else:
            self.send_response(404)
            self.end_headers()
            self.wfile.write(b"File not found.\n")

# Main function to start the server and print usage info
def main():
    if len(sys.argv) < 2:
        print(f"Usage: {sys.argv[0]} <port> [path]")
        sys.exit(1)

    port = sys.argv[1]

    if not port.isdigit():
        print("Error: Port must be a number.")
        sys.exit(1)

    global BASE_DIR
    BASE_DIR = sys.argv[2] if len(sys.argv) > 2 else "."

    # Get the IP address of tun0
    ip = get_tun0_ip()
    if not ip:
        print("Error: Could not get IP address for tun0 interface.")
        sys.exit(1)

    # Print PowerShell and wget commands
    print(f"Use the following commands to upload a file to the server:")

    # PowerShell command
    print("Windows PS:")
    print(f"Invoke-WebRequest -Uri http://{ip}:{port}/<outfile> -Method PUT -InFile <file_path>")
    print(f"Invoke-WebRequest -Uri http://{ip}:{port}/<outfile> -Method POST -InFile <file_path>")

    # wget command
    print("Linux wget:");
    print(f"wget --method=PUT --body-file=<file_path> http://{ip}:{port}/<outfile>")
    print(f"wget --method=POST --body-file=<file_path> http://{ip}:{port}/<outfile>")

    # Start the HTTP server
    server_address = ('', int(port))
    httpd = HTTPServer(server_address, Handler)
    print(f"Starting server on http://{ip}:{port}...")
    httpd.serve_forever()

if __name__ == "__main__":
    main()

